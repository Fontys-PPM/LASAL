//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "CommandRouter"
	Revision           = "0.0"
	GUID               = "{9E1BAA41-410E-41E2-B447-DC2954F866A1}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(480,120)">
	<Channels>
		<Server Name="CmdRouter" GUID="{CF3EF3C9-C556-423D-B567-DE197EC8F4DD}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Debug" GUID="{01CF4B89-FFCD-415C-A4E0-06F6413C5D6E}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="clib" Required="false" Internal="false"/>
		<Client Name="Controller" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
CommandRouter : CLASS
  //Servers:
	CmdRouter 	: SvrChCmd_DINT;
	Debug 	: SvrCh_DINT;
  //Clients:
	Controller 	: CltChCmd_MoveController;
	clib 	: CltChCmd_SigCLib;
  //Variables:
		DataBuffer : ARRAY [0..1024] OF CHAR;

		Command : ARRAY [0..4] OF CHAR;

		X : ARRAY [0..5] OF CHAR;

		Y : ARRAY [0..5] OF CHAR;

		Z : ARRAY [0..5] OF CHAR;

		Phi : ARRAY [0..5] OF CHAR;

  //Functions:
	
	FUNCTION GLOBAL SetData
		VAR_INPUT
			pData 	: ^void;
			size 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd MoveController
#pragma usingLtd SigCLib


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB CommandRouter::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_COMMANDROUTER
0$UINT, 0$UINT, (SIZEOF(::CommandRouter))$UINT, 
2$UINT, 2$UINT, 0$UINT, 
TO_UDINT(2047756655), "CommandRouter", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::CommandRouter.CmdRouter.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(119683386), "CmdRouter", 
(::CommandRouter.Debug.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2616296727), "Debug", 
//Clients:
(::CommandRouter.Controller.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1198357413), "Controller", TO_UDINT(1841029985), "MoveController", 0$UINT, 0$UINT, 
(::CommandRouter.clib.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1745651867), "clib", TO_UDINT(77440046), "SigCLib", 0$UINT, 24$UINT, 
END_FUNCTION


#define USER_CNT_CommandRouter 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_CommandRouter] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION CommandRouter::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR

	ret_code := C_OK;

END_FUNCTION

//{{LSL_IMPLEMENTATION

(* CommandRouter::SetData
Allows the tcp server to write the received data into the commandRouter instances
data buffer.
Appends a 0 at the end of the received string as string termination.
*)
FUNCTION GLOBAL CommandRouter::SetData
	VAR_INPUT
    // pointer to the data
		pData 	: ^void;
    // size of the received data
		size 	: UDINT;
	END_VAR
  
  VAR
    pString : ^CHAR;
  	counter : DINT;
    commandSize : DINT;
    parameterSize : DINT;
    XVal : DINT;
    YVal : DINT;
    ZVal : DINT;
    PhiVal : DINT;
  END_VAR

  parameterSize := 6 + 1;

  Debug += 1;
  
  _memcpy(ptr1:=#DataBuffer[0], ptr2:=pData, cntr:=size);
  DataBuffer[size] := 0;
  pString := #DataBuffer[0];
  

  // get first 5 values (this represents the command)
  FOR counter := 0 TO 4 BY 1 DO
    Command[counter] := (pString+counter)^;
  END_FOR;
  
  // get the other values depending
  // on the command (these represent the command parameters)
  if clib.StrCmp(ps1:=#Command[0], ps2:="CMOVE") = 0 then
    FOR counter := 0 TO 5 BY 1 DO
      X[counter] := (pString+counter+parameterSize-1)^; //6
    END_FOR;
    
    FOR counter := 0 TO 5 BY 1 DO
      Y[counter] := (pString+counter+parameterSize*2-1)^; //13
    END_FOR;
    
    FOR counter := 0 TO 5 BY 1 DO
      Z[counter] := (pString+counter+parameterSize*3-1)^; //20
    END_FOR;

    FOR counter := 0 TO 5 BY 1 DO
      Phi[counter] := (pString+counter+parameterSize*4-1)^; //27
    END_FOR;
    
    XVal := clib.AToI(ps1:=#X[0]);
    YVal := cLib.AToI(ps1:=#Y[0]);
    ZVal := cLib.AToI(ps1:=#Y[0]);
    PhiVal := cLib.AToI(ps1:=#Phi[0]);

    Controller.MoveAxis(XPos:=XVal, Speed:=200000, Accel:=2000000);
  end_if;

  
END_FUNCTION
