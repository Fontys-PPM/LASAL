//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_LMCSafety"
	Revision           = "1.21"
	GUID               = "{A8662F5D-CD14-4567-9257-4179A7472827}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_LMCSafety\LMCAxis.ico"
	SharedCommandTable = "true"
	Objectsize         = "(384,120)"
	Comment            = "The class _LMCSafety sets up an available interface to check:&#13;&#10;the limit switches: HWMin and HWMax as digital inputs&#13;&#10;the boot-state: HWReady as digital input &#13;&#10;general merror: HWError as digital input&#13;&#10;of a connected hardware.">
	<Channels>
		<Server Name="ClassSvr" GUID="{AA7499A3-F876-4E04-B37E-F8D4BDADC8F4}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="Emergency" Required="false" Internal="false" Comment="With this client a general error condition can be checked and it is possible to configure what in the case of an error should happen."/>
		<Client Name="HWError" Required="false" Internal="false" Comment="Error-State of the hardware:&#13;&#10;0 .. no hardware-error is active&#13;&#10;1 .. hardware-error is active"/>
		<Client Name="HWMax" Required="false" Internal="false" Comment="Digital-Input for the hardware switch maximum-position&#13;&#10;0 .. hardwareswitch is inactive&#13;&#10;1 .. hardwareswitch is active"/>
		<Client Name="HWMin" Required="false" Internal="false" Comment="Digital-Input for the hardware switch of minimum-position.&#13;&#10;0 .. hardwareswitch is inactive&#13;&#10;1 .. hardwareswitch is active"/>
		<Client Name="HWReady" Required="false" Internal="false" Comment="With this Digital-Input, it can read in whether the hardware is initialized completely&#13;&#10;"/>
		<Client Name="LMCController" Required="false" Internal="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.21" Date="2016-03-14" Author="HasHan" Company="Sigmatek" Description="Improvement: the CheckHwReady() methode will be called also from the connected controller"/>
		<Dokumentation Revision="1.20" Date="2013-02-08" Author="PALHAR&#13;&#10;HasHan" Company="Sigmatek" Description="1. Improvement: The if-condidion: &quot;if Emergency = 1 then&quot; readjusted to: if Emergency &lt;&gt; 0 then&quot; in order to allow reading in error codes by the client: Emergency.&#13;&#10;2. comment to the client: Energency added&#13;&#10;3. Improvement: add the functionality of the emergency Client"/>
		<Dokumentation Revision="1.0" Date="2012-09-27" Company="Sigmatek" Description="creation"/>
	</RevDoku>
</Class>
*)
_LMCSafety : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	HWReady 	: CltCh_DINT;
	HWError 	: CltCh_DINT;
	HWMin 	: CltCh_DINT;
	HWMax 	: CltCh_DINT;
	Emergency 	: CltCh_DINT;
	LMCController 	: CltChCmd_Controller;
  //Variables:
		SafetyAxis : BDINT
		[
		  1 HwErrorConnect,
		  2 HWReadyConnect,
		  3 HWMinConnect,
		  4 HWMaxConnect,
		  5 EmergencyConnect,
		  6 HwReadyFromController,
		];

  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
				//! <Function Comment="checks if the client &quot;HWReady&quot; is connected" Name="ChkHWReadyConnect"/>
	FUNCTION GLOBAL ChkHWReadyConnect
		VAR_OUTPUT
			RetCode 	: BOOL;			//! <Variable Comment="Returnvalue = TRUE if the client &quot;HWReady&quot; is connected&#13;&#10;            = FALSE if the client &quot;HWReady&quot; is not connected" Name="ChkHWReadyConnect.RetCode"/>
		END_VAR;
				//! <Function Comment="Reads the client &quot;HWReady&quot;" Name="ReadHWReady"/>
	FUNCTION GLOBAL ReadHWReady
		VAR_OUTPUT
			RetCode 	: DINT;			//! <Variable Comment="Value of the client &quot;HWREady&quot;" Name="ReadHWReady.RetCode"/>
		END_VAR;
	
	FUNCTION GLOBAL CheckHWSignals
		VAR_OUTPUT
			ErrorInfo 	: _LMCAXIS_ERROR;
		END_VAR;
				//! <Function Comment="Enables or disables reading the hw ready information from the controller" Name="SetReadHwReadyFromController"/>
	FUNCTION GLOBAL SetReadHwReadyFromController
		VAR_INPUT
			ReadOnOff 	: BOOL;			//! <Variable Comment="TRUE ... enables reading from the controller&#13;&#10;FALSE ... disables reading from the controller" Name="SetReadHwReadyFromController.ReadOnOff"/>
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd Controller


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _LMCSafety::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__LMCSAFETY
1$UINT, 21$UINT, (SIZEOF(::_LMCSafety))$UINT, 
1$UINT, 6$UINT, 0$UINT, 
TO_UDINT(3213872914), "_LMCSafety", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_LMCSafety.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::_LMCSafety.HWReady.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3806358573), "HWReady", 
(::_LMCSafety.HWError.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2544391667), "HWError", 
(::_LMCSafety.HWMin.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(820401606), "HWMin", 
(::_LMCSafety.HWMax.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(216754847), "HWMax", 
(::_LMCSafety.Emergency.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1646202866), "Emergency", 
(::_LMCSafety.LMCController.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1841476849), "LMCController", TO_UDINT(1198357413), "Controller", 1$UINT, 42$UINT, 
END_FUNCTION


#define USER_CNT__LMCSafety 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__LMCSafety] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _LMCSafety::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__LMCSafety, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//{{LSL_ENCRYPTION 16#800
548F4C40F342212FF2412A957A14F9956373153E803691C48E1B063B5E3D1ECDA4D18C34CE752D162401E89A61A7EBAE5C8D7FDD072CC905C759EF9C747BD52F5C9DB0BED61D972DEEBE421C65E3613D6E8673C189543282B8F5D85E2829E6ED6C3D7464
809533E4BA5DDB090C267A31ED3A7F132A256561C0149A0FEF5A11800C5EE91ABABFA8E40291825670E047AAD970DCF33ED9385DE06DFAF2CA2A2054DF8FBA856B7D80B3A93F9F2A58C9292410DA8BC549D8BA9DB6827D760D451738936B8234BD77B9B7
79226A6414B4E3ADD9A747FAAF2DA07300FF70D6B7DE8C45BF307AF1502A49531E7A9D9A15001700FD51B459E510A88A71968EEEB476E3CB441354C32DA1D621B2C9503ED316A55828E4BBDECFB34CE3C81630986429B0D03FC0EF07214B4AACC90AB1D6
4BFDF226F8C222020E956885F7268B64CA2DE0A96CCBA49ACF4EC2226197C7EFB57337604BBB4166BE2C4AAC2960406C0DA1A7B782F5E84641FB4B3E1A9C8D0D11F1D53C8B200B85293C76BBFFD41A1B59386EDB268B9C3D88B9E36ECE3F1194A27C11A2
5FF36C5E291DF1D1862EF39CA90586691CB7687BCE50519A3A0E5DF3E39574F3C917C15FB1DD357FFAB800E664BD0D0DDC39E6F9455B93B1AB858418F9D8FEE9BB43E9C17704111AB7450F1FBDB3139C574EEEA7AA0BE46F89F0EBCEC2200EED9C2EA615
41ED337BF28B6900E51FF494D9C9073CB81546EDC849791BAEEE0C2A520D1912E403CF5AEB4261441819B822E29CF6FEFF89254EEDC5699BA18F80ABE70AFC6A3B6DDD3B989E3D3FC47B72FF19C2D98E211AC5E909FC2A9271E8DF84A6B387FCF5831136
1D5CB127D919E86F3B6AEBA3DD69EE582863F85B25F92040AC35A4891224CB95AB61768338FB962E8BFBD13DAACFDB658EA617A5C9762FE4DBF1DBA833DF014169CC750D7C20E252935A4788A6A3EBC8D13E38C8334AFBC6A05BCC6382B05058E7C97BEC
D448715AEADD3C6C19B6A42C95788C484C637F85716088555FCC4574D5A6F032B69D751E87E493F215CABFD1A2F48649DAEB5FE4967CD237BC4F2FE00B6FEEF438EC74EB14B103CA280C46555613998E8E3945DD120431385786B4CC22123C9591486F0D
A53143DB2C956A4CE4CEACB7100931B43049AAAD4410CB1E50989B8EAFA449E1D02454A4A8069E5D6EF34EDAAFD4A32D853BBE2DA98263A18C50AE8CDC5D73B84E0CBDF4B4CD076A0CEDE053BF1E561C37A6121373ABC682CB96A42280D8893EF7D45807
AEEBD8087C889392946C2BC5E8031AF186FF5A8C5525CB8A952F1ABCCE2FBCC729007F1C6FCD2248E79C197590AB8CC163ADCBE99FC3458C141E92F55ABB4A55F1640C6CE4FCD42B20EE145F7A16AC7886F3A54FF084F66BE0FADF21FD051BBDCA8351D2
87EA5ACBAC38B344518F95AA75BAAC2FE1C1C8D54377FDE83848160B4842CE63263034125BC32A9A0B69C4A9724563F22DEC7BD7230CACD114DD5D79EC3C1D28EB46158F9CB8F098A9FAF6CAD760259A3DE3486ACF39019BA79F1F4E96EDC796B1A372E5
297F57595985971C553516F768B4FB9810553A5BF55376B9F379C39CC73D7C3D37A8B226DAD316030F5C007E3E4EE9F5F80AB6977B390A9453F35C60EDB6174905C5B20030F05D882057E2F3F979C03DA6731C6D48A8339F43CB8B78585DBDC8ED407ECD
F06FFB15FF4F64A2F84D57615BB1FCC2B3F9A981F5D8C11E9912C93BCD15AD2107E555683B40C1358F73E2E02F6749D9A49CB0F6ED9A14133B857C89495E8D94685CAFDEFC121CF4E5CFE64AF2808CE1ADBDCDAADF3CB99AEBAD8EE14B0802F66F94A1FF
2D4F33F1B093E87339395A040A3C2E89D255638BB5879A71D7A29FFCF2936AF55985EC83B42D8D6DCCB1E4B8089D8A78CEE921C214EC5500658E20EBBA8BF07D04CF0F3DFF66A506489B9316DEF2C1805B4B7B5A3857C923D558C6271D3E2FDD2C5E687F
BC040BC24FF19F62D84F430CF0FE609FBB0FA294FD544C6E88C23E4B250F6238580B4DF633CAFF6AC9C886ADBF7A37F6018F8C923D574F647102DEAE4BCB55A2F6FB911B6F9D456978709F5D5D269B9472479B8CE7AEABF8D4F8DB2C61B319A25E3ECAB3
E190D913650D1D67F117253478B8A1A8653C6DE59BFDA1A70601E89EC8CFB1B887D65596AFA07A05AC28EE150F57462E629E410A8A0B7F4EB3F107D5F8C7CEDCC95E48B8CF1B3E2C00837346F9F497E076CB3E3E3BD23F614F068BA288E305584E6F8180
990960EDFB8F278A8C0863918C7F5A9A821F14E9D16333123BF01C8F487FEAF94AD64FCFACCBF5F8D353A70DB0DF5B0BBF965BB501200DC32D9E5D9D886D57697478E2A5A4D47DAC0CB0F19D962EA4C16D8304C1EAB51C6B31E37AE0CFA5ECC87247F4C3
755EB50681C8E031A0025E36C746DE2A0FCE1476D15F4A502C49288C5539B5EABBD33B7B2995DD5E2EB893E55E9E2917FF3D9003D5DD99A1D1FE88944F1EC695101B3B98052BF84EA7F274D9780BB696BF017CFE118151BD777AA248F395B299D9ED912A
6E6FC549DEFFBCDD201868BC364FD0DBF4E67C29641DFEBD7D50FA97B289E6B0269C6A2E07B18055552603A9CC568312D7FC978DE1889FA20239A362A2F74E6AC95EA953DCE4BEEA5618D2332A059151427603909D1E1715D33E94934E333F068762F2CE
7AAF1A5CBDD345703CC34009E5FF25978B246DCB03B67E5B2686E9E353B559F2DA979DBC93AE0456C8320D7527E97392A45A9ADAF9FC61C3356D8C245E8B325A50F9E1E2DEC02EA7C80DC892A14C2A3DB36062A334B8E9DACA6BF253BA24C3DA8A1A678C
872C0E38A542DC2F9DD5FCF580740C65FFC68D2BF6B06B13AE1D71B46AAC8105DAAA2A920E9CAA46709ED43068F0BAB5F2EE8427411B7A2F53E75AA245DBD2C02978B11B50F97FCB2B601EC692E53E0A3386B343962A14E9D99899F5432435B0EF50B2C9
A535E3453EF9FA8CA3CFBE142250C710474FA291D166070F5DF7C07A8DF63C3E648808255C269E066560231427FBE0A3D33A1FCAF3BF873BDD4F3A8F527841FCA704A2792A3717AE7C24CA75A8EB7BABFCCB0C32CDA69C30CFABAD39BB7338D6BAABED64
1D58E6E8C029F7A80DAE8C93980CF305462B9B55D1E84845B8FA552C4ABEC0493213F8916232A0D971B04D31A44065D80191EC740CF5E0C86DF578ABAC1A55D1254833AB67ED98EEFCF54B9E6C5BDCB1E02908D4D0C220AC93FDFF20EC330A357F6FEA14
C6901522C714AE92861AC467F995DA022634C83B935D08AB599B0781F6AFB0B864F211401E9EA21C157B8D1660DC66D3F2795396F270ACCB5E3F7B41516847813057AA3E3649DB9532838D06778AC79F331B49932D36DE16181D6353F89A6EE3AA5155BB
41893178B03B54B4BA78D5F1B557C5C7B012B5BC027FBFA6DFF2DB37F0F49EB3F27EBB013760AE7BF8AF79064051BF219CE6682B2E8EE3128CAF067D0BFD85AB