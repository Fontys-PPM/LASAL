//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Invert"
	Revision           = "0.0"
	GUID               = "{29952CEC-33A9-4D21-9F72-6241E17D943F}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="fIn" GUID="{48261428-8B31-401A-9CE3-BA884FBB21CE}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Sign" GUID="{656F0484-B178-4A1B-9054-A29FA2CEB5E3}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Client Name="fOut" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
Invert : CLASS
  //Servers:
	fIn 	: SvrChCmd_DINT;
	Sign 	: SvrCh_DINT;
  //Clients:
	fOut 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL fIn::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Invert::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_INVERT
0$UINT, 0$UINT, (SIZEOF(::Invert))$UINT, 
2$UINT, 1$UINT, 0$UINT, 
TO_UDINT(48933185), "Invert", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Invert.fIn.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(998879419), "fIn", 
(::Invert.Sign.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2850782282), "Sign", 
//Clients:
(::Invert.fOut.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1329016572), "fOut", 
END_FUNCTION


#define USER_CNT_Invert 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Invert] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Invert::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Invert, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	fIn.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF fIn.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Sign.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Sign.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL Invert::fIn::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	fIn := input;
  fOut:=fIn*sign;
  fOut.Write(input:=fOut);
	result := fIn;

END_FUNCTION
