//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "DummyController"
	Revision           = "1.52"
	GUID               = "{4410AB82-439C-11D5-90C4-006063018AE8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\DummyController\Controller.ico"
	SharedCommandTable = "true"
	Objectsize         = "(460,120)"
	Comment            = "This class only provides the actual position, set position and set speed &#13;&#10;as clients, which are generated or read by the CNC.">
	<Channels>
		<Server
			Name           = "Signal_Input"
			Initialize     = "false"
			Visualized     = "true"
			WriteProtected = "true"
			Comment        = "This server shows the actual internal control variable and &#13;&#10;is connected to the CNC class.">
		</Server>
		<Client Name="AxisError" Required="false" Internal="false" Comment="Error of the axis"/>
		<Client Name="AxisStatus" Required="false" Internal="false" Comment="State of the axis"/>
		<Client Name="HWErrorQuit" Required="false" Internal="false" Comment="Client to quit a hardware error"/>
		<Client Name="iHWErrors" Required="false" Internal="false" Comment="This client reads the actual status of the hardware error.&#13;&#10;0 --&gt; OK&#13;&#10;1 --&gt; Error =&gt; Axis was stopped, controller is deactivated &#13;&#10;and the error status was passed to the CNC."/>
		<Client Name="oLivePosition" Required="false" Internal="false" Comment="This client provides the actual position of the axis."/>
		<Client Name="oProfilePosition" Required="false" Internal="false" Comment="This client provides the actual set position of the axis. "/>
		<Client Name="oSpeed" Required="false" Internal="false" Comment="This client provides the actual set speed of the axis."/>
		<Client Name="oStatus" Required="false" Internal="false" Comment="This client provides the actual axis status"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.52" Date="2018-06-26" Author="SatChr" Company="Sigmatek" Description="Bugfix: Works fine with _LMCAxis version &gt;= 1.73. due to changes in base class."/>
		<Dokumentation Revision="1.51" Date="2015-05-15" Author="SatChr" Company="Sigmatek" Description="Bugfix: If _LMCAxis::PowerOff(LMCAXIS_SMOOTH_STOPP) or CNC::ControllerOff(1) is executed, the DummyController must reset the AxisStatus.PowerOn flag."/>
		<Dokumentation Revision="1.50" Date="2013-07-18" Author="SliMic" Company="Sigmatek" Description="1. Add some comments to the methodes and variables"/>
		<Dokumentation Revision="1.40" Date="2013-02-08" Author="PALHAR&#13;&#10;" Company="Sigmatek" Description="1. Bugfix: Because of runtime minimization, the pointers StatePointer and CncstatPointer may only be checked for validity in the methode: StatePtr.&#13;&#10;2. Bugfix: Pointers: StatePointer and CncstatPointer checked to validity"/>
		<Dokumentation Revision="1.30" Date="2012-09-27" Author="RauAnd" Company="Sigmatek" Description="Modified for use with the _LMCAxis class"/>
		<Dokumentation Revision="1.20" Date="2011-05-02" Author="FuchsH" Company="Sigmatek" Description="Comments newly formatted."/>
		<Dokumentation Revision="1.10" Date="08.04.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.3" Date="22.01.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.2" Date="05.05.2008" Author="Rauand" Company="Sigmatek" Description="change of the base class Controller"/>
		<Dokumentation Revision="1.1" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
	<Network Name="DummyController">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{4410AB87-439C-11D5-90C4-006063018AE8}"
				Class      = "Controller"
				Position   = "(450,540)"
				Visualized = "true">
				<Channels>
					<Server Name="Signal_Input"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Signal_Input" Destination="_base.Signal_Input" Vertices="(922,210),(750,630),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using Controller

DummyController : CLASS
: Controller
  //Servers:
  //Clients:
	iHWErrors 	: CltCh_DINT;
	oLivePosition 	: CltCh_DINT;
	oProfilePosition 	: CltCh_DINT;
	oSpeed 	: CltCh_DINT;
	oStatus 	: CltCh_CncFlags;
	AxisStatus 	: CltCh__LMCAXIS_STATUS;
	AxisError 	: CltCh__LMCAXIS_ERROR;
	HWErrorQuit 	: CltCh_DINT;
  //Variables:
		StatePointer 	: ^CncFlags;
		CncstatPointer 	: ^CntrFlgs;
		pStatusAxis 	: ^_LMCAXIS_STATUS;
		pErrorAxis 	: ^_LMCAXIS_ERROR;
		pControlAxis 	: ^_LMCAXIS_CONTROLBITS;
  //Functions:
				//! <Function Comment="Receives as input from the CNC/_LMCAxis, the Actual Position and the Internal Position." Name="Control"/>
	FUNCTION VIRTUAL GLOBAL Control
		VAR_INPUT
			ActPos 	: DINT;
			IntPos 	: DINT;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
				//! <Function Comment="Updates the CNC StateFlags and the CNC ControlFlags" Name="StatePtr"/>
	FUNCTION VIRTUAL GLOBAL StatePtr
		VAR_INPUT
			StatePtr 	: ^CncFlags;
			CncstatePtr 	: ^CntrFlgs;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
				//! <Function Comment="Adopts the addresses of the Servers: AxisStatus, AxisError and the Bitfield:AxisControl&#13;&#10;around this for reading and updating" Name="SetAxisFlgs"/>
	FUNCTION VIRTUAL GLOBAL SetAxisFlgs
		VAR_INPUT
			pAxisStatus 	: ^_LMCAXIS_STATUS;
			pAxisError 	: ^_LMCAXIS_ERROR;
			pAxisControl 	: ^_LMCAXIS_CONTROLBITS;
		END_VAR
		VAR_OUTPUT
			Result 	: _LMCCONTROLLERTYPE;
		END_VAR;
				//! <Function Comment="Function used for transmitting the Speed value from the CNC/_LMCAxis to the controller" Name="Speed"/>
	FUNCTION VIRTUAL GLOBAL Speed
		VAR_INPUT
			ActSpeed 	: DINT;
		END_VAR;
				//! <Function Comment="checks if a Hardware Error is activ" Name="CheckHWError"/>
	FUNCTION VIRTUAL GLOBAL CheckHWError
		VAR_OUTPUT
			Retcode 	: BOOL;
		END_VAR;
				//! <Function Comment="function to quit a hardware error" Name="QuitHWError"/>
	FUNCTION VIRTUAL GLOBAL QuitHWError;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB DummyController::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_DUMMYCONTROLLER
1$UINT, 52$UINT, (SIZEOF(::DummyController))$UINT, 
0$UINT, 8$UINT, 0$UINT, 
TO_UDINT(3347386288), "DummyController", //Class
TO_UDINT(1198357413), "Controller", 1$UINT, 42$UINT, //Baseclass
//Servers:
//Clients:
(::DummyController.iHWErrors.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4116290219), "iHWErrors", 
(::DummyController.oLivePosition.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3369584784), "oLivePosition", 
(::DummyController.oProfilePosition.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(432752325), "oProfilePosition", 
(::DummyController.oSpeed.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1906102849), "oSpeed", 
(::DummyController.oStatus.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(353753559), "oStatus", 
(::DummyController.AxisStatus.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1169018451), "AxisStatus", 
(::DummyController.AxisError.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2650876086), "AxisError", 
(::DummyController.HWErrorQuit.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2200854325), "HWErrorQuit", 
END_FUNCTION


#define USER_CNT_DummyController 15

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_DummyController] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION DummyController::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= Controller::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= Controller::Signal_Input.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, Controller::Signal_Input.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_DummyController;
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Control();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #StatePtr();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #SetAxisFlgs();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[5]		:= #Speed();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[8]		:= #CheckHWError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[13]		:= #QuitHWError();

#pragma warning (default : 74)
	Controller::Signal_Input.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Controller::Signal_Input.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//{{LSL_ENCRYPTION 16#800
15FEA31BF342212FF2412A957A14F9958FCE9D60D68B1B08E24B710F2162B37B2ACD6B69F9A3C27BBAABB76A1E23DB67009BF0F7F5F41115588C165C87FAD32BA0BF2EB20722F31900BA078FE5F69E1F1074B28AA17988477653C39BCD2C7D5AC2105114
2763DE4D3FD0671F486264D7811834332621D99D3A32D67BCD93F51356228A8790E44BE1F5A02C6F9946742B2EC2FE8484DE25764B5EF8EBAE9936FE4EF96970D3888147A6EDBEB892A8D255B55E1F1F4D13CFA7CEA348FF4901D9871E9009478871FF4F
F4C10D5CCDF609B4B5B0D354D88A879C065FC64BA9F01DC81F9F887247B454F1BFD276E39F3F0CFCBA30F5C67CAA597E4D054821DCE04D81E5BA2607641B2A3BB20686E3E1AD9ADA7F9A9F7A756993E079F356DF8789242B100621F7FF29A6CD49E43190
81A4617859F7881BF5E9673D159B453E4F5A12A19E60F91C2F4C4CBA6080F392881B0B2633504C5012964998DD7ED76F8A27229D589580C9004E796EF1A1748F188714E132471EC731074141E406D1141AE41F9CE4C7CEB1AA6EEEE215F37C95D6679D69
848AF7C101A348B55FCC3DF043807FE20C432AF8C47AA398A4C0725F02DAC0D65D4C7175C9066C575D88711B18AE9168A6C96C062D3C7B26A09808449941869C6C0C881AADED699D3AA830490A16ED7B7DC4FEDBBE08AEB686E275F1E7ED939D5A49EA28
E2FB2692C19EFE8AF5DB67641632110960183924510D3B08293039EC6AEE85B94F38926EF369F51729AA24ACB587859897EC059CDE1F62FC1B441A502B4DAB91356B2443A1D984C04CC472AF25AD8A7CD9D797FA13C4FE2911E12020F78366B4A7FD8695
69DF629DB37ADA5578748FA732690446B689316705F1F075F2517A1B04779B359BAF046DF75D74D65A8540C05C857DE52B0F71F0D40C6897E41DF57A53D14D68BD8CA04B737DF6F0ACC3FA62170B8C35353837167B3964905F80D764486C615087207FDE
3E52DAAF476B99CBA274F06AEA961CF6F15E3D8133E0F49F58E72D35EC22F1B31BE1929F787CF01DC20F892D2CD83ED0B51E5356381D7459229949B002CEB0F3779CE52BF41C130A91605E8D200A19C25436547B6B62FD79C2BFDEDAC4FC226227C54342
E41438D3B5228F1B847EE86A07EA369B3605FA0F438ACE3B8F8F4FBDC78E987E0C22A995A72E876719E00B2255835346874E4DE48DAFB9F97F8BF9ED3514EF8A8343DBBE36B5A7519DE66E0C816D9E6221AF34C0E0E69298368EC1FFF795EC3D324F84DF
9E8B6FE15D8CD663AA3F47F9A4146B8EBC3B83D2EC89420BB2D865EC490DEFDACB70838BE99476E6B641D6F7B71A3497740B3C17EB7A1159D61D666C76AF113B9374D985FED7A59BD2037B563CCB77C3D8A6E9205CFEEFB0528CFDDBEF4887C858ABBE3A
6D36930830A453EC03204B69308944725656FDB05CC14A8DBE67F7C3229A1952DC8B1D120E8DC255E0EA211E257E321CBA16FAEF043FFEA1D9067168C0F74479B5EDE13E1A507362EAA0ABFC1A0B68585BEC823274DEBAACA36C74C6FCE660058211BC90
4E7C4170844E1B10363AB4810283DA063FE0CB92BB69589220B97904FA03F4EF4F3B1223FCD8F15A0DAC652011421E99FD9D6B3295C5877E4AC71F2E3DE1579A950C711D0136423E4C6538E9F137D658E14A51AAC0E1010D18D5391089F92757A43D2E5E
571D065426C77463FCAB85D7AA040FEFA96F40B003C44B9B59605C4F6BCCE8FA972651F087ABB7B1B7FA21601C8270F4DE523E05A32270BFC03AFAE8F010DCFDAF8A087E0E754DA688AFF3E450B508175D276A02786422353582287A8F5A8B8AFBB54D19
EA2C4BCD1667EBC8DCB091211175A9387C19C36C8CBC67F66F6D012157E49EE28E758637FE821884C28BCC65AA5FF7582FED947F0E099504A47604FF9C3862EAF015A4486D5A2C1F02FCBA60C2E980C9437587274C8DF8B393FD21CD918964708C71FEDB
E82E0659575D6B59FC7CFD706AE4DE041892CA2A32AAE0F1282FA27FFD53312C734445778997CF141C73B7D789484F03039B1B6E01B11281E7E4D147DE9EC54ACABD3ADE72730F6494548CC99D1CEEAFAB5EC4A9D5543B7F6B43A40A50AB552597EDDF1D
0F4E25059058D50EF75914FA37B9C0F17C74B23657054C14C33F7BDFD36DC20C67DA80BAB0B2057B5DE603553868E04FE8A88F09685FD0590004EE8B37A7FECFA550360C57D9B8354BF94C0A2D9A8DF3401EE676ECC8D7480E06BD41C91495E636E35D20
0565E1D4659C20857EB136AF99BE6DE371945BB38FCB265D23685A651A99E2F1F28B932E5C32DC71E9A8BC5E987D07FDAEB20757AB1BD5DFD17F8A19D1C2C03F4383BF0203079BE5788F6298EECBBC3584BA476C5115D8FDE7C4E369E732F184B50AC4AF
4EF680C5CD6747F4C0B07A8F2F2CFDF735FE8A82651AC003A5BE796245C0F65C4607EEECE77F07F4224DEC08304397B2F3BA6F89694F7482831C410D827D48B0AAC8A2018341A17284D81ADAF6DDF023AFBC4501FFCC7C8E9624196FEDA334683BA282AC
8A0C9E33DA243B1942A915C0132D622719695D00B3AA07F350DDCFA59D776B1EF59387804B0D77DBBE9A31A121E4E800DA8B847C7956CB866B489367630F054E0D2C05A7CB26B7CCB15C9AC8C529CF80D93820893B391ADB8EF9C0A5FF6D4A9182C1796A
F16CEDF8C23FBB75C4FF81586F5731D1BF68D671C9AB19C7DAB78B8F7889723B3CB95A2A4EB32B2DA1C215E25008C5F4B83BE4B00CDAFEF2AB23F43276855F35702357E44678CEBFC3CEF17A5702EEA33F1309C471DC9D8D4906102FDA9FC8C00211C7A1
FC376215BAD0ECA5F733104FB3F2C1807936AB7729B913DE81CF44EB4179423C58789F370AC1B5CD9F1F09CF6650347D6867028CBDBC45844D0B87A235E155B242E913F7F5D9639621BB9B83195A4C8F561596C1286E319F04194E5A104BD11BF43384B2
9282A600702FA2BC9D9F47191B4D661B1CC9D191102D1091C66F215EB7156486CB1063589216679E66789AAD3213A39992F10FB0D565E03C2BF58A5155974F8DA21D8295AB590E9CC36C41128F899E3A3C61C8890D7D80177D91841B62789C91CF9D032B
74743A2344A17C8785EBB401FCC6C569486E33DEB6A09BE86C92BBF2B5157B6A76913889750AFABE5FAACAB076EDFAF4C72C9C87990F175A78CD594F98C9A24FA1DDC0D702440070DF02096D27127B6E6F022FFE4328ACA0D07A06D26B36B35ABF400026
3474972DB39FD3C5330E44BDDABC18D8DF9811DD6D85BCBC05B999B0F4737559ECDDAA3543D40B12CC65DBA399B91F780A93D89C3393ED15FC6061CF34B213C69F01B5D98FD24BEBE6C1F322017AF8AFB97BC0E167164BDCC72D17CF9993A54B88913375
75353BA331086EAC65215C03D5A6169FB2F2C40504AACCDF1FF2F8877D24B673