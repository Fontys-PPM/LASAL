//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_DriveMng_DC062"
	Revision           = "1.16"
	GUID               = "{FCCD6A43-4771-4A9D-8ADA-1F4AD3E24FEF}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "10 ms"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_DriveMngBase\Drive.ico"
	SharedCommandTable = "true"
	Objectsize         = "(586,120)"
	Comment            = "manages the whole sdias communication between&#13;&#10;the Drive and the application">
	<Channels>
		<Server Name="FwDate" GUID="{D919698B-83A9-4F69-BBDB-248F916C72E2}" Class="VirtualBaseInit" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="FWVersion" GUID="{293E1D9D-F322-4F38-9D4E-12E9407502AE}" Class="VirtualBaseInit" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="HWVersionSdias" GUID="{ED29E0B3-B611-4D87-9F20-0A5B5933F2F7}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="shows hw version in the format xx.yy (16#0120 means v1.20)"/>
		<Server Name="LEDControl" GUID="{82D2620C-5FCC-4724-B558-5203129EEA0F}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="Sets a LED on Hardware, to detect Module.&#13;&#10;0 ... LED off&#13;&#10;1 ... LED on&#13;&#10;2 ... blinking slow&#13;&#10;3 ... blinking fast"/>
		<Client Name="BusInterfaceSdiasDriveMng" Required="true" Internal="true"/>
		<Client Name="FWDateString" Required="true" Internal="true"/>
		<Client Name="FWNumSTring" Required="true" Internal="true"/>
		<Client Name="Place" Required="false" Internal="false" Comment="Place of SDIAS Modul [0..63]."/>
		<Client Name="Required" Required="true" Internal="false" DefValue="1" Comment="0 = module is not required&#13;&#10;1 = module is required (CPU will crash if module is missing)"/>
		<Client Name="SdiasIn" Required="true" Internal="false" Comment="This Clients must be connected to a SDIAS_Out_[x] Server."/>
		<Client Name="TimeMultiplier" Required="false" Internal="false" DefValue="1" Comment="multiplier of cycle time"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="ZoePat"/>
		<Dokumentation Revision="1.16" Date="02.08.2018" Author="RamAnd" Company="Sigmatek" Description="LASAL Hardware Description (.lhd) file has been updated."/>
		<Dokumentation Revision="1.15" Date="20.03.2018" Author="FurDom" Company="Sigmatek" Description="When reinitializing the drive with the server SDDCmdIntfc of the _DriveAxis class, the CmdState of the class _BusInterfaceSdiasDriveMng is no longer set to &quot;_NotInitialized&quot;, so that no error occurs with the DC06x modules. The status is internally passed on to keep the process the same as with the SDD300 and MDD100 drives."/>
		<Dokumentation Revision="1.14" Date="23.01.2018" Author="RamAnd" Company="Sigmatek" Description="Log messages have been standardized for easier maintenance, easier use in any class and to allow spam filtering. Code for the logging functions is now only located in HwControl."/>
		<Dokumentation Revision="1.13" Date="16.05.2017" Author="RamAnd" Company="Sigmatek" Description="When adding an SDO (i.e. via ReadSPIData) from background priority it was possible that the adding process got interrupted by receiving the answer to this SDO which is handled in cyclic priority. In the error case the answer was unexpected and therefore ignored. Then the class signals a timeout while waiting for the answer, which already arrived before waiting for it. Added mutex and changed instruction order to prevent this error."/>
		<Dokumentation Revision="1.12" Date="12.07.2016" Author="SeiChr" Company="Sigmatek" Description="Added Values for the total Current calculation. SA 31571"/>
		<Dokumentation Revision="1.11" Date="02.05.2016" Author="EisMic" Company="Sigmatek" Description="Added new NewInst commando for Lasal2 to get Transparent state."/>
		<Dokumentation Revision="1.10" Date="07.04.2016" Author="EisMic" Company="Sigmatek" Description="Added support for new firmwares which use 2 more bits for calculation of the year date of the firmware creation."/>
		<Dokumentation Revision="1.9" Date="16.03.2016" Author="EisMic" Company="Sigmatek" Description="Improved comment of server HWVersion (to clarify that the shown version corresponds to the parameter I-HC of the drive)."/>
		<Dokumentation Revision="1.8" Date="01.03.2016" Author="EisMic" Company="Sigmatek" Description="Corrected BoundExceed Error in base class at Write method of LEDControl Server when Place = LSL_DEACTIVATED."/>
		<Dokumentation Revision="1.7" Date="22.06.2015" Author="EisMic" Company="Sigmatek" Description="The servers FPGAVersion, SerialNo, Device ID and status and input servers are now not reset anymore when the module is disconnected."/>
		<Dokumentation Revision="1.6" Date="26.05.2015" Author="RamAnd" Company="Sigmatek" Description="Added possibility to get enabled Axis which is needed to set absolute position of axis."/>
		<Dokumentation Revision="1.5" Date="16.04.2015" Author="EisMic&#13;&#10;LanSte&#13;&#10;PieSte" Company="Sigmatek" Description="Added support for visualisation in graphical hardware editor.&#13;&#10;Added support for calculating resources for graphical hardware editor.&#13;&#10;Add new parameter to read drive scope faster. It is used for SDD1X00 drives."/>
		<Dokumentation Revision="1.4" Date="17.03.2015" Author="RamAnd" Company="Sigmatek" Description="Added HW Version for sdias clients."/>
		<Dokumentation Revision="1.3" Date="06.03.2015" Author="PieSte" Company="Sigmatek" Description="Changed commands for businterface to be compatible with new drive hardware.&#13;&#10;Changed visual state of FwNumString and FwDateString object for lse displaying."/>
		<Dokumentation Revision="1.2" Date="11.02.2015" Author="PieSte" Company="Sigmatek" Description="Corrected read spi data for hardwaretree in methode GetSPIDataFromID from SdiasBase."/>
		<Dokumentation Revision="1.1" Date="30.01.2015" Author="RamAnd" Company="Sigmatek" Description="The parameters for creating DOs were not correctly initialized if SdiasManager class v1.63 or higher has been used."/>
		<Dokumentation Revision="1.0" Date="24.11.2014" Author="ZoePat" Company="Sigmatek" Description="Initial library version."/>
	</RevDoku>
	<Network Name="_DriveMng_DC062">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{10ADAE88-BD33-47B4-939D-5F88CD292D44}"
				Class      = "_DriveMngBase"
				Position   = "(1726,120)"
				Visualized = "false">
				<Channels>
					<Server Name="AxisAvailable"/>
					<Server Name="CmdState"/>
					<Server Name="DeviceAddress"/>
					<Server Name="DeviceID"/>
					<Server Name="DriveType"/>
					<Server Name="HWVersion"/>
					<Server Name="Online"/>
					<Server Name="Release"/>
					<Server Name="RetryCounter"/>
					<Server Name="SerialNo"/>
					<Server Name="VendorID"/>
					<Client Name="cOnline"/>
					<Client Name="coStdLib"/>
					<Client Name="FwDatetr"/>
					<Client Name="FwNumStr"/>
					<Client Name="To_TaskObjectControl"/>
					<Client Name="ToBusIF"/>
					<Client Name="toVaran"/>
				</Channels>
			</Object>
			<Object
				Name       = "BusInterfaceSdiasDriveMng"
				GUID       = "{4DD9EB01-1E15-4762-943D-F52F5C0B505B}"
				Class      = "_BusInterfaceSdiasDriveMng"
				Position   = "(330,330)"
				Visualized = "false">
				<Channels>
					<Server Name="CallCommand"/>
					<Server Name="ClassState"/>
					<Server Name="DeviceID"/>
					<Server Name="FPGAVersion"/>
					<Server Name="HwVersion"/>
					<Server Name="LEDControl"/>
					<Server Name="Online"/>
					<Server Name="RetryCounter"/>
					<Server Name="SDOState"/>
					<Server Name="SerialNo"/>
					<Client Name="Place"/>
					<Client Name="Required" Value="1"/>
					<Client Name="SdiasID" Value="1801"/>
					<Client Name="SdiasIn"/>
					<Client Name="TimeMultiplier" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "FWDateString"
				GUID       = "{EE657DEE-B72E-4956-9044-1DD7D18F9B90}"
				Class      = "String"
				Position   = "(1110,450)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "FWNumSTring"
				GUID       = "{4BF1C716-9D25-4DBB-90D6-3B3D9F3813F8}"
				Class      = "String"
				Position   = "(1110,300)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.CmdState" Destination="_base.CmdState" Vertices="(2388,210),(2216,210),"/>
			<Connection Source="this.BusInterfaceSdiasDriveMng" Destination="BusInterfaceSdiasDriveMng.ClassState"/>
			<Connection Source="_base.ToBusIF" Destination="BusInterfaceSdiasDriveMng.CallCommand" Vertices="(1726,570),(1500,570),(1500,900),(892,960),"/>
			<Connection Source="BusInterfaceSdiasDriveMng.SdiasIn" Destination="this.SdiasIn" Vertices="(330,420),(120,420),(120,690),(38,690),"/>
			<Connection Source="BusInterfaceSdiasDriveMng.Place" Destination="this.Place" Vertices="(330,480),(150,480),(150,750),(38,750),"/>
			<Connection Source="BusInterfaceSdiasDriveMng.Required" Destination="this.Required" Vertices="(330,540),(180,540),(180,810),(38,810),"/>
			<Connection Source="BusInterfaceSdiasDriveMng.TimeMultiplier" Destination="this.TimeMultiplier" Vertices="(330,600),(210,600),(210,870),(38,870),"/>
			<Connection Source="this.Online" Destination="_base.Online" Vertices="(2388,270),(2216,270),"/>
			<Connection Source="this.Release" Destination="_base.Release" Vertices="(2388,330),(2216,330),"/>
			<Connection Source="this.DriveType" Destination="_base.DriveType" Vertices="(2388,510),(2216,630),"/>
			<Connection Source="this.LEDControl" Destination="BusInterfaceSdiasDriveMng.LEDControl" Vertices="(2388,870),(2310,960),(1020,960),(1020,720),(892,780),"/>
			<Connection Source="this.DeviceID" Destination="_base.DeviceID" Vertices="(2388,390),(2216,510),"/>
			<Connection Source="this.RetryCounter" Destination="_base.RetryCounter" Vertices="(2388,450),(2216,570),"/>
			<Connection Source="this.SerialNo" Destination="_base.SerialNo" Vertices="(2388,570),(2340,690),(2216,750),"/>
			<Connection Source="_base.FwDatetr" Destination="FWDateString.Data" Vertices="(1726,390),(1590,390),(1590,450),(1590,540),(1426,540),"/>
			<Connection Source="this.HWVersion" Destination="_base.HWVersion" Vertices="(2388,630),(2340,750),(2216,810),"/>
			<Connection Source="_base.cOnline" Destination="BusInterfaceSdiasDriveMng.Online" Vertices="(1726,270),(1470,270),(1470,840),(892,900),"/>
			<Connection Source="this.FWNumSTring" Destination="FWNumSTring.Data"/>
			<Connection Source="this.FWDateString" Destination="FWDateString.Data"/>
			<Connection Source="this.FwDate" Destination="FWDateString.Data" Vertices="(2388,810),(2310,900),(1530,900),(1530,540),(1426,540),"/>
			<Connection Source="_base.FwNumStr" Destination="FWNumSTring.Data" Vertices="(1726,330),(1560,330),(1560,390),(1426,390),"/>
			<Connection Source="this.FWVersion" Destination="FWNumSTring.Data" Vertices="(2388,750),(2340,810),(2310,870),(1560,870),(1560,390),(1426,390),"/>
			<Connection Source="this.HWVersionSdias" Destination="BusInterfaceSdiasDriveMng.HwVersion" Vertices="(2388,690),(892,600),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using _DriveMngBase

_DriveMng_DC062 : CLASS
: _DriveMngBase
  //Servers:
	HWVersionSdias 	: SvrCh_HDINT;
	FWVersion 	: SvrChCmd_UDINT;
	FwDate 	: SvrChCmd_UDINT;
	LEDControl 	: SvrCh_DINT;
  //Clients:
	FWDateString 	: CltChCmd_String;
	FWNumSTring 	: CltChCmd_String;
	SdiasIn 	: CltChCmd_DINT;
	Place 	: CltCh_UDINT;
	Required 	: CltCh_DINT;
	TimeMultiplier 	: CltCh_UDINT;
	BusInterfaceSdiasDriveMng 	: CltChCmd__BusInterfaceSdiasDriveMng;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GetBusDeviceID
		VAR_OUTPUT
			output 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GetDrvDeviceID
		VAR_OUTPUT
			output 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL HWVersionSdias::Read
		VAR_OUTPUT
			output (EAX) 	: HDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL LEDControl::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL LEDControl::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using _BusInterfaceSdiasDriveMng
#pragma using String


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _DriveMng_DC062::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__DRIVEMNG_DC062
1$UINT, 16$UINT, (SIZEOF(::_DriveMng_DC062))$UINT, 
4$UINT, 7$UINT, 0$UINT, 
TO_UDINT(1470062879), "_DriveMng_DC062", //Class
TO_UDINT(496739206), "_DriveMngBase", 1$UINT, 41$UINT, //Baseclass
//Servers:
(::_DriveMng_DC062.HWVersionSdias.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3951609296), "HWVersionSdias", 
(::_DriveMng_DC062.FWVersion.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(156722779), "FWVersion", 
(::_DriveMng_DC062.FwDate.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(1606377179), "FwDate", 
(::_DriveMng_DC062.LEDControl.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(288098344), "LEDControl", 
//Clients:
(::_DriveMng_DC062.FWDateString.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3010322216), "FWDateString", TO_UDINT(1850111279), "String", 1$UINT, 10$UINT, 
(::_DriveMng_DC062.FWNumSTring.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4286323315), "FWNumSTring", TO_UDINT(1850111279), "String", 1$UINT, 10$UINT, 
(::_DriveMng_DC062.SdiasIn.pCh)$UINT, _CH_CLT_CMD$UINT, 2#0000000000000110$UINT, TO_UDINT(3019270524), "SdiasIn", 
(::_DriveMng_DC062.Place.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(2202636669), "Place", 
(::_DriveMng_DC062.Required.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000110$UINT, TO_UDINT(648558917), "Required", 
(::_DriveMng_DC062.TimeMultiplier.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(2421717411), "TimeMultiplier", 
(::_DriveMng_DC062.BusInterfaceSdiasDriveMng.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2613118149), "BusInterfaceSdiasDriveMng", TO_UDINT(1048633017), "_BusInterfaceSdiasDriveMng", 1$UINT, 10$UINT, 
END_FUNCTION


#define USER_CNT__DriveMng_DC062 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__DriveMng_DC062] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _DriveMng_DC062::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= _DriveMngBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _DriveMngBase::CmdState.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _DriveMngBase::CmdState.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT__DriveMng_DC062;
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #GetBusDeviceID();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #GetDrvDeviceID();

#pragma warning (default : 74)
	_DriveMngBase::CmdState.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _DriveMngBase::CmdState.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	HWVersionSdias.pMeth			:= StoreMethod( #HWVersionSdias::Read(), #M_NO_F() );
	IF HWVersionSdias.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, FWVersion.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	FWVersion.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF FWVersion.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, FwDate.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	FwDate.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF FwDate.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	LEDControl.pMeth			:= StoreMethod( #LEDControl::Read(), #LEDControl::Write() );
	IF LEDControl.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL _DriveMng_DC062::LEDControl::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	LEDControl := BusInterfaceSdiasDriveMng.LEDControl.Read();
	output := LEDControl;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _DriveMng_DC062::LEDControl::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	LEDControl := input;
	result := (BusInterfaceSdiasDriveMng.LEDControl.Write(LEDControl))$DINT;

END_FUNCTION

FUNCTION VIRTUAL _DriveMng_DC062::GetBusDeviceID
	VAR_OUTPUT
		output 	: UDINT;
	END_VAR
  
  output := BusInterfaceSdiasDriveMng.SdiasID;

END_FUNCTION


FUNCTION VIRTUAL _DriveMng_DC062::GetDrvDeviceID
	VAR_OUTPUT
		output 	: UDINT;
	END_VAR
  
  output := DRIVEMNG_DRVDEVICEID_DC061;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _DriveMng_DC062::HWVersionSdias::Read
	VAR_OUTPUT
		output (EAX) 	: HDINT;
	END_VAR

	HWVersionSdias := BusInterfaceSdiasDriveMng.HwVersion.Read();
	output := HWVersionSdias;

END_FUNCTION
