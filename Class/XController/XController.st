//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "XController"
	Revision           = "0.0"
	GUID               = "{4CCE7D61-1241-4401-9247-E713ACA7A0B9}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{BCEBFDDD-48AC-43AD-99EE-DDEFE12E9880}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="lmcX" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
XController : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	lmcX 	: CltChCmd__LMCAxis;
  //Variables:
  //Functions:
	
	FUNCTION GLOBAL MoveAxis
		VAR_INPUT
			XPos 	: DINT;
			Speed 	: DINT;
			Accel 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _LMCAxis


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB XController::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_XCONTROLLER
0$UINT, 0$UINT, (SIZEOF(::XController))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(220044894), "XController", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::XController.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::XController.lmcX.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(908124938), "lmcX", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 85$UINT, 
END_FUNCTION


#define USER_CNT_XController 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_XController] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION XController::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR

	ret_code := C_OK;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION GLOBAL XController::MoveAxis
	VAR_INPUT
		XPos 	: DINT;
		Speed 	: DINT;
		Accel 	: DINT;
	END_VAR
  
  lmcX.PowerOn(Mode:=::_LMCAXIS_MOVEDIRECTION::LMCAXIS_MOVE_ANY_WAY);
  lmcX.MoveRelative(Position:=XPos, Mode:=::_LMCAXIS_MOVE_RELATIVE_MODE::LMCAXIS_MOVE_RELATIVE_TO_DESTINATION, Speed:=Speed, Accel:=Accel, Decel:=Accel, Jerk:=0);
  //lmcX.PowerOff(Mode:=::_LMCAXIS_POWER_OFF_MODE::LMCAXIS_SMOOTH_STOPP);
  
END_FUNCTION
